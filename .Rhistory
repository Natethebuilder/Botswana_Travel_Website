# Load CSV file
data <- read.csv("C:\Users\natha\MASDATA\MASNETLOGOFILE InterventionEffects-spreadsheet.csv")
# Load CSV file
data <- read.csv("C:/Users/natha/MASDATA/MASNETLOGOFILE InterventionEffects-spreadsheet.csv")
# Load CSV file
data <- read.csv("C:/Users/natha/Downloads/Cleaned_InterventionEffects.csv")
# Load CSV file
data <- read.csv("C:/Users/natha/Downloads/Cleaned_InterventionEffects.csv"), header = TRUE, fill = TRUE, stringsAsFactors = FALSE)
# Load CSV file
data <- read.csv("C:/Users/natha/Downloads/Cleaned_InterventionEffects.csv"), sep = ",", header = TRUE, fill = TRUE, comment.char = "")
# Load the cleaned CSV file into R
data <- read.csv("C:/Users/natha/Downloads/Cleaned_InterventionEffects.csv", header = TRUE)
# Load the cleaned CSV file into R
data <- read.csv("C:\Users\natha\Downloads\Cleaned_Table_InterventionEffects.csv", header = TRUE)
# Load the cleaned CSV file into R
data <- read.csv("C:/Users/natha/Downloads/Cleaned_Table_InterventionEffects.csv", header = TRUE)
# Check the structure of the data
str(data)
# Preview the first few rows
head(data)
# Load the cleaned CSV file into R
data <- read.csv("C:/Users/natha/Downloads/Cleaned_Table_InterventionEffects.csv", header = TRUE)
# Check the structure of the data
str(data)
# Preview the first few rows
head(data)
# Summary statistics of the data
summary(data)
# Count missing values per column
colSums(is.na(data))
# Group by environment type and intervention levels
avg_prejudice <- data %>%
group_by(environmentType, slider_legalPolicyIntensity, slider_trainingIntensity) %>%
summarise(mean_prejudice = mean(mean.prejudice..of.people, na.rm = TRUE))
library(dplyr)
# Group by environment type and intervention levels
avg_prejudice <- data %>%
group_by(environmentType, slider_legalPolicyIntensity, slider_trainingIntensity) %>%
summarise(mean_prejudice = mean(mean.prejudice..of.people, na.rm = TRUE))
# View aggregated results
head(avg_prejudice)
library(dplyr)
# Group by environment type and intervention levels
avg_prejudice <- data %>%
group_by(environmentType, slider_legalPolicyIntensity, slider_trainingIntensity) %>%
summarise(mean_prejudice = mean(mean.prejudice..of.people, na.rm = TRUE))
colnames(data)
# Group by environment type and intervention levels
avg_prejudice <- data %>%
group_by(environmentType, slider_legalPolicyIntensity, slider_trainingIntensity) %>%
summarise(mean_prejudice = mean(mean..prejudice..of.people, na.rm = TRUE))
# View aggregated results
head(avg_prejudice)
library(ggplot2)
ggplot(avg_prejudice, aes(x = slider_legalPolicyIntensity, y = mean_prejudice, color = factor(environmentType))) +
geom_line() +
labs(
title = "Effect of Legal Policy Intensity on Prejudice",
x = "Legal Policy Intensity",
y = "Average Prejudice",
color = "Environment Type"
)
# Aggregate average prejudice for each intervention type
intervention_effects <- data %>%
summarise(
legal_policy_effect = cor(slider_legalPolicyIntensity, mean.prejudice..of.people, use = "complete.obs"),
training_effect = cor(slider_trainingIntensity, mean.prejudice..of.people, use = "complete.obs"),
community_event_effect = cor(slider_communityEventIntensity, mean.prejudice..of.people, use = "complete.obs"),
shared_resource_effect = cor(slider_sharedResourceIntensity, mean.prejudice..of.people, use = "complete.obs")
)
# Aggregate average prejudice for each intervention type
intervention_effects <- data %>%
summarise(
legal_policy_effect = cor(slider_legalPolicyIntensity, mean.prejudice..of.people, use = "complete.obs"),
training_effect = cor(slider_trainingIntensity, mean..prejudice..of.people, use = "complete.obs"),
community_event_effect = cor(slider_communityEventIntensity, mean..prejudice..of.people, use = "complete.obs"),
shared_resource_effect = cor(slider_sharedResourceIntensity, mean..prejudice..of.people, use = "complete.obs")
)
# Aggregate average prejudice for each intervention type
intervention_effects <- data %>%
summarise(
legal_policy_effect = cor(slider_legalPolicyIntensity, mean..prejudice..of.people, use = "complete.obs"),
training_effect = cor(slider_trainingIntensity, mean..prejudice..of.people, use = "complete.obs"),
community_event_effect = cor(slider_communityEventIntensity, mean..prejudice..of.people, use = "complete.obs"),
shared_resource_effect = cor(slider_sharedResourceIntensity, mean..prejudice..of.people, use = "complete.obs")
)
# Aggregate average prejudice for each intervention type
intervention_effects <- data %>%
summarise(
legal_policy_effect = cor(slider_legalPolicyIntensity, `mean [prejudice] of people`, use = "complete.obs"),
training_effect = cor(slider_trainingIntensity, `mean [prejudice] of people`, use = "complete.obs"),
community_event_effect = cor(slider_communityEventIntensity, `mean [prejudice] of people`, use = "complete.obs")
)
# Aggregate average prejudice for each intervention type
intervention_effects <- data %>%
summarise(
legal_policy_effect = cor(slider_legalPolicyIntensity, `mean..prejudice..of.people`, use = "complete.obs"),
training_effect = cor(slider_trainingIntensity, `mean [prejudice] of people`, use = "complete.obs"),
community_event_effect = cor(slider_communityEventIntensity, `mean [prejudice] of people`, use = "complete.obs")
)
# Aggregate average prejudice for each intervention type
intervention_effects <- data %>%
summarise(
legal_policy_effect = cor(slider_legalPolicyIntensity, `mean..prejudice..of.people`, use = "complete.obs"),
training_effect = cor(slider_trainingIntensity, `mean..prejudice..of.people`, use = "complete.obs"),
community_event_effect = cor(slider_communityEventIntensity, `mean..prejudice..of.people`, use = "complete.obs")
)
# View the correlation effects
intervention_effects
library(ggplot2)
# Create a dataframe for plotting
effect_df <- data.frame(
Intervention = c("Legal Policy", "Training", "Community Events"),
Correlation = c(-0.3158695, -0.3533492, -0.4173979)
)
# Bar plot of correlations
ggplot(effect_df, aes(x = Intervention, y = Correlation, fill = Intervention)) +
geom_bar(stat = "identity") +
labs(
title = "Effectiveness of Interventions in Reducing Prejudice",
x = "Intervention Type",
y = "Correlation with Prejudice"
) +
theme_minimal()
colnames(data)
# List of intervention columns
intervention_columns <- c("slider_legalPolicyIntensity",
"slider_communityEventIntensity",
"slider_youthSocializationIntensity",
"slider_trainingIntensity",
"slider_economicIncentiveIntensity")
# Compute correlations for all interventions with overall prejudice
intervention_effects <- data.frame(
Intervention = intervention_columns,
Correlation = sapply(intervention_columns, function(column) {
cor(data[[column]], data[["mean..prejudice..of.people"]], use = "complete.obs")
})
)
# Display the correlations
print(intervention_effects)
# Visualization
library(ggplot2)
ggplot(intervention_effects, aes(x = Intervention, y = Correlation, fill = Intervention)) +
geom_bar(stat = "identity") +
labs(
title = "Correlations Between Interventions and Prejudice",
x = "Intervention Type",
y = "Correlation with Prejudice"
) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Aggregate correlations by environment type
effects_by_environment <- data %>%
group_by(environmentType) %>%
summarise(
legal_policy = cor(slider_legalPolicyIntensity, mean..prejudice..of.people, use = "complete.obs"),
community_event = cor(slider_communityEventIntensity, mean..prejudice..of.people, use = "complete.obs"),
youth_socialization = cor(slider_youthSocializationIntensity, mean..prejudice..of.people, use = "complete.obs"),
training = cor(slider_trainingIntensity, mean..prejudice..of.people, use = "complete.obs"),
economic_incentive = cor(slider_economicIncentiveIntensity, mean..prejudice..of.people, use = "complete.obs")
)
# Melt the data for visualization
library(tidyr)
effects_by_environment_melted <- effects_by_environment %>%
pivot_longer(cols = -environmentType, names_to = "Intervention", values_to = "Correlation")
# Visualization
ggplot(effects_by_environment_melted, aes(x = factor(environmentType), y = Correlation, fill = Intervention)) +
geom_bar(stat = "identity", position = "dodge") +
labs(
title = "Impact of Interventions by Environment Type",
x = "Environment Type",
y = "Correlation with Prejudice",
fill = "Intervention"
) +
theme_minimal()
# Install required packages if not already installed
if (!require(tidyverse)) install.packages("tidyverse")
# Install required packages if not already installed
if (!require(tidyverse)) install.packages("tidyverse")
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(lme4)) install.packages("lme4")
if (!require(car)) install.packages("car")
if (!require(MuMIn)) install.packages("MuMIn")
# Load libraries
library(tidyverse)
library(ggpubr)
library(lme4)    # For mixed-effects models
library(car)     # For ANOVA and model diagnostics
library(MuMIn)   # For R-squared in mixed models
# Load the cleaned combined dataset
data <- read.csv("C:/Users/natha/Downloads/Combined_Cleaned_Intervention_Analysis.csv")
# Inspect the dataset structure
glimpse(data)
# Convert key variables to factors
data <- data %>%
mutate(
Intervention = as.factor(X1),         # First index key is the intervention type
Environment = as.factor(environmentType), # Convert environment to factor
run_number = as.factor(run.number),   # Convert run number to factor
Intensity = as.numeric(slider_trainingIntensity +
slider_communityEventIntensity +
slider_sharedResourceIntensity +
slider_youthSocializationIntensity +
slider_economicIncentiveIntensity +
slider_legalPolicyIntensity), # Combined intensities
PrejudiceReduction = initialPrejudice - mean.prejudice # Reduction in prejudice
)
colnames(data)
data <- data %>%
mutate(
Intervention = as.factor(X),                       # X likely corresponds to the intervention type
Environment = as.factor(environmentType),          # Matches environmentType column
run_number = as.factor(X.run.number.),             # X.run.number. matches the run number column
Intensity = slider_sharedResourceIntensity +
slider_legalPolicyIntensity +
slider_communityEventIntensity +
slider_youthSocializationIntensity +
slider_trainingIntensity +
slider_economicIncentiveIntensity,     # Sum all intensities for combined analysis
PrejudiceReduction = mean..prejudice..of.people    # Assuming this column reflects reduction logic
)
# Verify processed data
glimpse(data)
# Summary statistics for cooperation and prejudice
summary_stats <- data %>%
group_by(Intervention, Intensity, Environment) %>%
summarise(
mean_CoopOther = mean(coopother.agg, na.rm = TRUE),
mean_DefOther = mean(defother.agg, na.rm = TRUE),
mean_PrejudiceReduction = mean(PrejudiceReduction, na.rm = TRUE),
n = n()
)
print(summary_stats)
# Inter-group cooperation vs Intensity
ggplot(data, aes(x = Intensity, y = coopother.agg, color = Environment)) +
geom_smooth(method = "loess", se = TRUE) +
facet_wrap(~ Intervention, scales = "free") +
labs(title = "Effect of Interventions on Inter-group Cooperation",
x = "Intervention Intensity",
y = "Inter-group Cooperation") +
theme_minimal()
# Inter-group cooperation vs Intensity
ggplot(data, aes(x = Intensity, y = coopother.agg, color = Environment)) +
geom_smooth(method = "loess", se = TRUE) +
facet_wrap(~ Intervention, scales = "free") +
labs(title = "Effect of Interventions on Inter-group Cooperation",
x = "Intervention Intensity",
y = "Inter-group Cooperation") +
theme_minimal()
# Prejudice Reduction vs Intensity
ggplot(data, aes(x = Intensity, y = PrejudiceReduction, color = Environment)) +
geom_smooth(method = "loess", se = TRUE) +
facet_wrap(~ Intervention, scales = "free") +
labs(title = "Effect of Interventions on Prejudice Reduction",
x = "Intervention Intensity",
y = "Prejudice Reduction") +
theme_minimal()
# Load the dataset
training_data <- read.csv("C:/Users/natha/Downloads/Preprocessed_TrainingIntensity.csv")
# Inspect the structure of the dataset
glimpse(training_data)
# Check summary statistics for key variables
summary(training_data)
# Preprocess the data
training_data <- training_data %>%
mutate(
Environment = as.factor(environmentType),          # Convert to factor
run_number = as.factor(X.run.number.),             # Convert to factor
Intensity = slider_trainingIntensity,              # Rename for clarity
PrejudiceReduction = mean..prejudice..of.people,   # Assuming reduction logic
CooperationRatio = coopother.agg / (coopother.agg + defother.agg) # Cooperation ratio
)
# Verify changes
glimpse(training_data)
# Summarize statistics
summary_stats <- training_data %>%
group_by(Environment, Intensity) %>%
summarise(
MeanCoopOther = mean(coopother.agg, na.rm = TRUE),
MeanDefOther = mean(defother.agg, na.rm = TRUE),
MeanPrejudice = mean(mean..prejudice..of.people, na.rm = TRUE),
MeanCooperationRatio = mean(CooperationRatio, na.rm = TRUE),
n = n()
)
# View summary statistics
print(summary_stats)
# Plot cooperation with other groups vs training intensity
ggplot(training_data, aes(x = Intensity, y = coopother.agg, color = Environment)) +
geom_smooth(method = "loess", se = TRUE) +
geom_point(alpha = 0.6) +
labs(title = "Effect of Training Intensity on Inter-group Cooperation",
x = "Training Intensity",
y = "Inter-group Cooperation") +
theme_minimal()
# Mixed-effects model for inter-group cooperation
coop_model <- lmer(coopother.agg ~ Intensity * Environment + (1|run_number), data = training_data)
# Mixed-effects model for inter-group cooperation
coop_model <- lmer(coopother.agg ~ Intensity * Environment + (1|run_number), data = training_data)
# Mixed-effects model for prejudice reduction
prejudice_model <- lmer(PrejudiceReduction ~ Intensity * Environment + (1|run_number), data = training_data)
library(Matrix)
library(lme4)
coop_model <- lmer(coopother.agg ~ Intensity * Environment + (1|run_number), data = training_data)
